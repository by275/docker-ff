#!/bin/bash

git_pull() {
  if [ $# -lt 1 ]; then return 1; fi
  if [ -z "${1}" ] || [ ! -d "${1}" ]; then return 1; fi
  git config --global --get-all safe.directory | grep -wq "${1}" || \
    git config --global --add safe.directory "${1}"
  if [ "$(git -C "${1}" rev-parse --is-inside-work-tree 2>/dev/null)" = "true" ]; then
    git_dir=$(git -C "${1}" rev-parse --absolute-git-dir 2>/dev/null)
    find "${git_dir}" -name "index.lock" -exec rm -f {} \;
    git_url=$(git -C "${1}" config --get remote.origin.url 2>/dev/null)
    git_repo=$(echo "${git_url}" | cut -d/ -f4-)
    echo "*** checking for updates: ${git_repo%%.git}"
    git -C "${1}" reset --quiet --hard HEAD
    RESP=$(git -C "${1}" pull 2>&1 |tee /dev/null; exit ${PIPESTATUS[0]}) && \
      { if ! echo "$RESP" | grep -q "up to date"; then echo -e "$RESP" | ( TAB=$'    ' ; sed "s/^/$TAB/" ); fi } || \
      { echo "    $RESP"; echo "    re-installing to '${1}'..." && \
        rm -rf "${1}" && git -C "$(dirname "$1")" clone --quiet --depth 1 "${git_url}" > /dev/null
      }
  fi
}

is_git_dir() {
    if [ "$(git -C "$1" rev-parse --is-inside-work-tree 2>/dev/null)" = "true" ]; then return 0; fi
    return 1
}

fix_ownership() {
  find "$@" \! \( -uid $(id -u abc) -gid $(id -g abc) \) -print0 | \
    xargs -0 --no-run-if-empty chown -h abc:abc
}
