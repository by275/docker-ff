name: buildx

on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/by275/ff

jobs:
  ubuntu:
    runs-on: ubuntu-22.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Initial Buildx
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: ${{ env.IMAGE_NAME }}:testing
          platforms: linux/amd64,linux/arm64
      -
        name: Load Built Image and Get Variables
        id: vars
        run: |
          docker buildx build \
            -t ${{ env.IMAGE_NAME }}:testing \
            -f Dockerfile \
            --platform=linux/amd64 \
            --load \
            .
          CID=$(docker run -d -p 9999:9999 ${{ env.IMAGE_NAME }}:testing)
          sleep 30s
          VER=$(curl -fsSL http://localhost:9999/version)
          docker rm -f $CID
          echo "APP_VER=$VER" >> $GITHUB_ENV
      -
        name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Buildx and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.APP_VER }}
          platforms: linux/amd64,linux/arm64
          push: true
      -
        name: Notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          description: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.APP_VER }}

  # alpine:
  #   runs-on: ubuntu-22.04
  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v4
  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #     -
  #       name: Set up Buildx
  #       uses: docker/setup-buildx-action@v3
  #     -
  #       name: Initial Buildx
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: Dockerfile.alpine
  #         tags: ${{ env.IMAGE_NAME }}:testing
  #         platforms: linux/amd64,linux/arm64,linux/arm/v7
  #     -
  #       name: Load Built Image and Get Variables
  #       id: vars
  #       run: |
  #         docker buildx build \
  #           -t ${{ env.IMAGE_NAME }}:testing \
  #           -f Dockerfile.alpine \
  #           --platform=linux/amd64 \
  #           --load \
  #           .
  #         CID=$(docker run -d -p 9999:9999 ${{ env.IMAGE_NAME }}:testing)
  #         sleep 30s
  #         VER=$(curl -fsSL http://localhost:9999/version)
  #         docker rm -f $CID
  #         echo "APP_VER=$VER" >> $GITHUB_ENV
  #     -
  #       name: Login to ghcr.io
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     -
  #       name: Buildx and Push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: Dockerfile.alpine
  #         tags: |
  #           ${{ env.IMAGE_NAME }}:alpine
  #           ${{ env.IMAGE_NAME }}:alpine-${{ env.APP_VER }}
  #         platforms: linux/amd64,linux/arm64,linux/arm/v7
  #         push: true
  #     -
  #       name: Notification
  #       uses: sarisia/actions-status-discord@v1
  #       if: always()
  #       with:
  #         webhook: ${{ secrets.DISCORD_WEBHOOK }}
  #         status: ${{ job.status }}
  #         description: |
  #           ${{ env.IMAGE_NAME }}:alpine
  #           ${{ env.IMAGE_NAME }}:alpine-${{ env.APP_VER }}
